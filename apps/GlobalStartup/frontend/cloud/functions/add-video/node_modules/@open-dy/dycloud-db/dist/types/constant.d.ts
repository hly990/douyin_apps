/**
 *  This file may have been modified by Beijing Douyin Information Service Co., Ltd.
 */
declare const FieldType: {
    Null: string;
    Number: string;
    String: string;
    Boolean: string;
    Date: string;
    Array: string;
    Object: string;
    Command: string;
    ServerDate: string;
};
/**
 * 排序方向
 */
declare type OrderDirection = 'desc' | 'asc';
/**
 * 排序方向列表
 */
declare const OrderDirections: string[];
/**
 * 操作符别名
 */
declare enum Handles {
    lt = "<",
    gt = ">",
    lte = "<=",
    gte = ">=",
    eq = "=="
}
/**
 * 操作符映射
 * SDK => MongoDB
 */
declare const HandleMap: {
    "<": string;
    "<=": string;
    "==": string;
    ">": string;
    ">=": string;
};
/**
 * queryType
 */
declare enum QueryType {
    DOC = "DOC",
    WHERE = "WHERE"
}
declare const databaseAPIActions: string[];
declare enum DatabaseAPIAction {
    'database.getDocument' = "database.getDocument",
    'database.calculateDocument' = "database.calculateDocument",
    'database.updateDocument' = "database.updateDocument",
    'database.removeDocument' = "database.removeDocument",
    'database.addDocument' = "database.addDocument",
    'database.aggregateDocument' = "database.aggregateDocument"
}
declare const databaseMethods: string[];
declare enum DatabaseMethod {
    'collection' = "collection",
    'collection.get' = "collection.get",
    'collection.count' = "collection.count",
    'collection.update' = "collection.update",
    'collection.remove' = "collection.remove",
    'collection.add' = "collection.add",
    'collection.where' = "collection.where",
    'collection.order-by' = "collection.order-by",
    'collection.limit' = "collection.limit",
    'collection.skip' = "collection.skip",
    'collection.field' = "collection.field",
    'collection.doc' = "collection.doc",
    'doc.get' = "doc.get",
    'doc.set' = "doc.set",
    'doc.update' = "doc.update",
    'doc.remove' = "doc.remove",
    'serverDate' = "serverDate",
    'regExp' = "regExp",
    'collection.command' = "collection.command",
    'collection.command.mod' = "collection.command.mod",
    'collection.command.exists' = "collection.command.exists",
    'collection.command.all' = "collection.command.all",
    'collection.command.elemMatch' = "collection.command.elemMatch",
    'collection.command.size' = "collection.command.size",
    'collection.command.set' = "collection.command.set",
    'collection.command.remove' = "collection.command.remove",
    'collection.command.inc' = "collection.command.inc",
    'collection.command.mul' = "collection.command.mul",
    'collection.command.min' = "collection.command.min",
    'collection.command.max' = "collection.command.max",
    'collection.command.rename' = "collection.command.rename",
    'collection.command.push' = "collection.command.push",
    'collection.command.pop' = "collection.command.pop",
    'collection.command.unshift' = "collection.command.unshift",
    'collection.command.shift' = "collection.command.shift",
    'collection.command.pull' = "collection.command.pull",
    'collection.command.pullAll' = "collection.command.pullAll",
    'collection.command.addToSet' = "collection.command.addToSet",
    'collection.command.expr' = "collection.command.expr",
    'collection.command.aggregate.addToSet' = "collection.command.aggregate.addToSet",
    'collection.command.aggregate.avg' = "collection.command.aggregate.avg",
    'collection.command.aggregate.first' = "collection.command.aggregate.first",
    'collection.command.aggregate.last' = "collection.command.aggregate.last",
    'collection.command.aggregate.max' = "collection.command.aggregate.max",
    'collection.command.aggregate.mergeObject' = "collection.command.aggregate.mergeObject",
    'collection.command.aggregate.min' = "collection.command.aggregate.min",
    'collection.command.aggregate.push' = "collection.command.aggregate.push",
    'collection.command.aggregate.sum' = "collection.command.aggregate.sum",
    'collection.command.aggregate.add' = "collection.command.aggregate.add",
    'collection.command.aggregate.arrayElemAt' = "collection.command.aggregate.arrayElemAt",
    'collection.command.aggregate.concat' = "collection.command.aggregate.concat",
    'collection.aggregate.addFields' = "collection.aggregate.addFields",
    'collection.aggregate.bucket' = "collection.aggregate.bucket",
    'collection.aggregate.bucketAuto' = "collection.aggregate.bucketAuto",
    'collection.aggregate.count' = "collection.aggregate.count",
    'collection.aggregate.group' = "collection.aggregate.group",
    'collection.aggregate.limit' = "collection.aggregate.limit",
    'collection.aggregate.lookup' = "collection.aggregate.lookup",
    'collection.aggregate.match' = "collection.aggregate.match",
    'collection.aggregate.project' = "collection.aggregate.project",
    'collection.aggregate.replaceRoot' = "collection.aggregate.replaceRoot",
    'collection.aggregate.sample' = "collection.aggregate.sample",
    'collection.aggregate.skip' = "collection.aggregate.skip",
    'collection.aggregate.sort' = "collection.aggregate.sort",
    'collection.aggregate.sortByCount' = "collection.aggregate.sortByCount",
    'collection.aggregate.unwind' = "collection.aggregate.unwind",
    'collection.aggregate.end' = "collection.aggregate.end"
}
export { FieldType, Handles, OrderDirection, OrderDirections, QueryType, HandleMap, databaseAPIActions, DatabaseAPIAction, databaseMethods, DatabaseMethod, };
export declare const DEFUNT_INNER_VALUE_TYPE = "default";

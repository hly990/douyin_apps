/**
 *  This file may have been modified by Beijing Douyin Information Service Co., Ltd.
 */
import { LogicCommand } from '../commands/logic-command';
import { UpdateCommand } from '../commands/update-command';
export declare type IQueryCondition = Record<string, any> | LogicCommand;
export interface IUpdateCondition {
    [key: string]: any;
}
export declare class UpdateSerializer {
    static encodeEJSON(query: IQueryCondition | UpdateCommand): string;
    encodeUpdate(query: IQueryCondition | UpdateCommand): IUpdateCondition;
    encodeUpdateObject(query: Record<string, any>): IQueryCondition;
    encodeUpdateCommand(query: UpdateCommand): IQueryCondition;
    encodeFieldUpdateCommand(query: UpdateCommand): IQueryCondition;
    encodePullNormalValue(query: any, value: any, $op: any): {
        [x: number]: {
            [x: string]: any;
        };
    };
    encodePullAndValue(query: any, value: any, $op: any): {
        [x: number]: {
            [x: string]: {};
        };
    };
    encodePullNorOrValue(query: any, value: any, $op: any): {
        [x: number]: {
            [x: string]: {
                [x: string]: {};
            };
        };
    };
    encodeArrayUpdateCommand(query: UpdateCommand): IQueryCondition;
    merge(query: Record<string, any>, condition: Record<string, any>, key: string): void;
}

import { InternalSymbol } from '../symbols';
export declare enum UPDATE_COMMANDS_ENUMS {
    SET_COMMAND = "set",
    REMOVE_COMMAND = "remove",
    INC_COMMAND = "inc",
    MUL_COMMAND = "mul",
    MAX_COMMAND = "max",
    MIN_COMMAND = "min",
    RENAME_COMMAND = "rename",
    PUSH_COMMAND = "push",
    POP_COMMAND = "pop",
    SHIFT_COMMAND = "shift",
    UNSHIFT_COMMAND = "unshift",
    PULL_COMMAND = "pull",
    PULL_ALL_COMMAND = "pullAll",
    ADD_TO_SET_COMMAND = "addToSet"
}
export declare class UpdateCommand {
    fieldName: string | InternalSymbol;
    operator: any;
    operands: any;
    _internalType: InternalSymbol;
    pullVal?: string;
    constructor(operator: any, operands?: any, fieldName?: string | InternalSymbol, pullVal?: string);
    _setName(fieldName: string): UpdateCommand;
}
export declare function isUpdateCommand(object: any): object is UpdateCommand;
export default UpdateCommand;

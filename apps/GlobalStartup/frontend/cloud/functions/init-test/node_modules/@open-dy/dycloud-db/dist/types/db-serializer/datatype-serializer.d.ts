/**
 *  This file may have been modified by Beijing Douyin Information Service Co., Ltd.
 */
import { LogicCommand } from '../commands/logic-command';
import { QueryCommand } from '../commands/query-command';
export declare type IQueryCondition = Record<string, any> | LogicCommand;
export declare type AnyObject = {
    [x: string]: any;
};
export declare function serialize(val: any): IQueryCondition;
export declare function encodeElemMatchNormalValue(query: QueryCommand, value: any, $op: any): {
    [x: number]: {
        $and: any[];
    };
} | {
    [x: string]: {
        [x: number]: any;
    };
};
export declare function encodeElemMatchAndValue(query: QueryCommand, value: any, $op: any): {
    [x: number]: {};
};
export declare function encodeElemMatchNorOrValue(query: QueryCommand, value: any, $op: any): {
    [x: number]: {
        [x: string]: any[];
    };
} | {
    [x: string]: {
        [x: number]: {
            [x: string]: any[];
        };
    };
};
export declare function encodeElemMatchValue(query: QueryCommand): {
    [x: string]: {
        [x: number]: any;
    };
};
export declare function encodeAllValue(query: QueryCommand): {
    [x: string]: IQueryCondition;
};
export declare function serializeHelper(val: any, visited: AnyObject[]): Record<string, any>;
